# Generated by Django 3.2.13 on 2022-05-04 15:13

import auth_.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import utils.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MainUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='last name')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('phone', models.CharField(blank=True, max_length=30, null=True, validators=[utils.validators.validate_phone_number], verbose_name='phone number')),
                ('role', models.SmallIntegerField(choices=[(1, 'super admin'), (2, 'client'), (3, 'courier'), (4, 'staff')], default=2)),
                ('is_staff', models.BooleanField(default=False, verbose_name='is_staff')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', auth_.models.MainUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, max_length=16, null=True, validators=[utils.validators.validate_card_number], verbose_name='number')),
                ('expire_date', models.DateField(blank=True, null=True, verbose_name='expire date')),
                ('balance', models.PositiveIntegerField(default=0)),
                ('cvv', models.CharField(blank=True, max_length=3, null=True, validators=[utils.validators.validate_card_cvv], verbose_name='cvv')),
                ('full_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='full name')),
            ],
            options={
                'verbose_name': 'card',
                'verbose_name_plural': 'cards',
            },
        ),
        migrations.CreateModel(
            name='Courier',
            fields=[
                ('mainuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth_.mainuser')),
                ('salary', models.PositiveIntegerField(default=0)),
                ('review', models.PositiveIntegerField(default=0, validators=[utils.validators.validate_review])),
            ],
            options={
                'verbose_name': 'courier',
                'verbose_name_plural': 'couriers',
            },
            bases=('auth_.mainuser',),
            managers=[
                ('objects', auth_.models.MainUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('mainuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth_.mainuser')),
                ('salary', models.PositiveIntegerField(default=0, verbose_name='salary')),
            ],
            options={
                'verbose_name': 'staff',
                'verbose_name_plural': 'staff',
            },
            bases=('auth_.mainuser',),
            managers=[
                ('objects', auth_.models.MainUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=500, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Профиль',
                'verbose_name_plural': 'Профили',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('mainuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth_.mainuser')),
                ('address', models.CharField(blank=True, max_length=30, null=True, verbose_name='address')),
                ('card', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='auth_.card')),
            ],
            options={
                'verbose_name': 'client',
                'verbose_name_plural': 'clients',
            },
            bases=('auth_.mainuser',),
            managers=[
                ('objects', auth_.models.ClientManager()),
            ],
        ),
    ]
